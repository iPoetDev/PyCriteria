Changelog:  Updating Readme| Minor lint fixes

Save | Commit and | See new changes | Locally and remotely

2023-05-23 v00.07.003-002
### Status
    - Updating Readme
### Noted (ADR|etc)
### Bumped
    - Bumped to v00.07.001
- Updated readme.md
### Added
    - Added Readme: Feature/User Acceptance Testing, without results
    - Added Readme: Business Logic Guide for flowchart
### Mutated/Updated
### Tested
    - Bugs
      - Record all bugs in README -> GitHub Issues
        - What was the problem?
        - What was the solution?
        - If you could not resolve it, include it in README
        - Include screenshots of bugs in README
    - Validation
      - Code Validation
      - Formatting
      - Linting
    - Error Handling
      - User cannot submit empty input
      - Error messages are informative
    - User Story
      - Story: As a User I want to ...
      - Story Testing: Feature and details that answer story
      - Format: Tabular view, two columns
    - Features (Feature acceptance testing)
      - Feature:
      - Test:
      - Outcome/Effect:
    - Testing Plan is
      - To test commands for issues and get results back ☑️
        - `find locate` and prompt works ☑️️
      - To check the option parameters for function, and valid/invalid input
      - To check for user flow if they make the wrong error
      - The query data should be much smaller dataset for user to work on ☑️️
         - `find locate` and retrieve a single record ☑️️
         - creates a class Record ☑️️
      - To then sore/cache the result query data for CrUD ops
        - Create an editor, that manipulates the record series / frame ☑️️
        - Read the smaller working data ☑️️
        - Create a new item to working data or source data ☑️ or
        - Update same item, ☑️ or
        - Delete the same item ☑️ or
       - To present and results ⏸☑️  - Side by side for individual records
       - Change the web view for wider coverage
       - To commit changes to the remote datastore ⏸️ or
       - To repeat on the new data - each command request data each time. ⏸️
### Commenting: LO 1.3.1
    CRITICAL
    - ☑️ app.py: Module, Classes, Methods and by Docstrings
    - ☑️ controller.py: Module, Classes, Methods and by Docstrings
    - ☑️ connections.py: Module, Classes, Methods and by Docstrings
    MINOR
    - ☑️ sidecar.py: Module, Classes, Methods and by Docstrings
    - ☑️ settings.py: Module, Classes, Methods and by Docstrings
    - ☑️ exceptions.py: Module, Classes, Methods and by Docstrings
    - ☑️ commands.py: Module, Classes, Methods and by Docstrings
    - ☑️ apptypes.py: Module, Types and by Docstrings
### Linted May 2023 23rd
    - PASSING: Pep8 Linter: pycodestye: Passing, with exception of W293, ignored
      - https://pep8ci.herokuapp.com/
    - PyCharm: Python: Passing with additional noqa usage
       - Weak Warning:  Ln 197, Exception.py
    - PyLint: Passing
    - MyPy: Not Passing.
            Major efforts, but suffice for now.
    - Ruff: Increase in noqa and ignored issues
      -  But is Passing of what is not ignored
    - NOQA: Ignoring lint issues
      - Use of noqa:
        - Causes: Either IDE complains that couldn't be fixed, or costly to fix a small effort.
        - Causes: Convention Breakage:
                  No sense to stay in coding style, deviation to own coding style.
        - Causes: Other linters have caught more serious issues, these are fluff issues.
### Disabled
### Removed
### Fixed
### Fixme (Code)
### Todo (Task)
### Style
    ✔️Classes: Use basic templates, static method decorators, some pure classes
    ✔️Linting: resolving static analysis, static types -> Testing
    ✔️Typing: Use of TypeHints, and typed returns -> Testing
    ✔️Testing:
         ✔️ 1) Locally in IDE, Partial by Mon 22 at 6:30pm
         ✔️ 2) Heroku flow/CI: Monday 22nd May
         3) Heroku App
     ✔️ Validation: Needs to have user inputs (4.3) ready.
        - click.prompts/options already check for types, and options can constrain choice
        - there are type checks for all input vars, with default as strings
        - There are no constraints on the data patterns / forms needing regex.
        - limited inputs at this MVP stage
     ✔️ DataModel
        - Current setting up a datamodel to
          i) Load to a Panda's dataframe
          ii) Load a filtered view of a dataframe (selected columns as Views)
          iii) Load a single dataset, a Panda Series, as a single record
          iv) Find a single, as above, and display as a Card view
          v) Use same find algorithm, to Edit (insert, append, clear) same data record
             a) single record modifiable fields are Notes, and maybe ToDo.
          vi) View the modified record
### Design
### Planned
    -️ ☑️️ Stage 1: prepare core utils and remote capacities as Classes etc -* Currently
    - ️️☑️️ Stage 2 research and prepare console shell design:
         - ☑️ Update: using rich.* and it is working
    - ️☑️️ Stage 3: Setup Heroku App, document (readme.md 7.3) and get print hello to web interface
    - ☑️ Stage 4: Develop data model and logic models for front end/local
       - connection.py
         - CLASS: GOOGLECONNECTOR: Load data by API/Framework
       - controller.py for
         - ☑️CLASS: CONTROLLER, DATA CONTROLLER: controller/load bulk data logic,
         - ☑️CLASS: COLUMNSCHEMA, HEADERS: data views (subsets),
         - ☑️CLASS: DISPLAY, INNER, WEBCONSOLE: display (version 1)
         - ☑️CLASS: RECORD: individual dataset, and view/display console/tables
         - ☑️CLASS: EDITOR: CUD/Modify ops:  ☑️ Create/Add/Insert,  ☑️Update/Append,  ☑️Delete/Clear, Save/Commit
       - app.py
         - ☑️CLASS: VIEW, WINDOW, CRITERIAAPP, CHECKS, RESULTS
       - Refactoring Mismatch/Opportunity
         - There was/is some duplication of display logic between app.py and controller.py
           - This may be resolved by submission,
           - Else it be a future feature/enhancement/code maintenance effort
         ☑️ 4.1: ☑️READING, ☑️FILTERING, ☑️DISPLAYING - @2023-05/18
         ️️ ☑️ 4.2: ☑️FINDING, ☑️LOCATING BT INDEX, ☑️FOCUSING -@2023-05-19
                - ☑️ FIND: Locate by index of a record ONLY
         ☑️️ 4.3: ⏸INPUTING, DELETING
               - STATUS: CODED☑️,Testing Monday 22nd Add a note @ 17:30
                 - Notes, Todo
         ☑️ 4.4: UPDATING, APPENDING, MODIFYING
               - STATUS: Coded ☑️, Testing
         ⏸️ 4.5: COMMITTING AND VERIFICATION.
           - Has the changes been committed safely.
         4.6: BULK CHANGE, SORTING
             - Bulk edit a whole row
             - Built edit many rows, either contiguous or non-contiguous/random
             - STATUS:  PAUSED, DEFERRED, NOT MVP
         4.7 FIND ANY VALUE
            - Find contiguous rows, random rows: The logic is there, the display is not
            - Find by column, show all rows
            - STATUS: PAUSED, DEFERRED, NOT MVP
     Logic Flow
         ☑️️  1 User reads information ☑️️  fetched for different views ☑️️ or browse pages
         ☑️ 2 User searches/select/filters information to edit/create
         ☑️️ 3 User inputs/updates/clears information based on selection
         4 User commits saves to the list
          5 User made a mistake, deletes a record
          6 User has to change/swap two records for each other: CHALLENGE
          7 User sorts the list if it goes out of order (append, insert, delete)
BREAKING CHANGE:


### Closed: Issues
